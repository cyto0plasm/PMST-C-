<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>